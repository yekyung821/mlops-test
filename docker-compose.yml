services:
  postgres:
    image: postgres:15
    container_name: game-postgres-1
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  airflow-init:
    image: apache/airflow:2.9.3-python3.11
    container_name: game-airflow-init-1
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-docker apache-airflow-providers-slack"
    volumes:
      - ./dags:/opt/airflow/dags
    entrypoint: bash -lc
    command: >
      "
      airflow db migrate &&
      airflow users create
        --username admin --firstname Air --lastname Flow
        --role Admin --email admin@example.com --password admin || true
      "
    restart: "no"

  airflow-webserver:
    image: apache/airflow:2.9.3-python3.11
    container_name: game-airflow-webserver-1
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__BASE_URL: "http://localhost:8080"
      AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT: "300"
      AIRFLOW__WEBSERVER__WORKER_CLASS: "sync"
      AIRFLOW__WEBSERVER__WORKERS: "2"
      AIRFLOW__LOGGING__LOGGING_LEVEL: "INFO"
      _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-docker apache-airflow-providers-slack"
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock   # DockerOperator가 host docker를 쓰기 위함
    restart: unless-stopped

  airflow-scheduler:
    image: apache/airflow:2.9.3-python3.11
    container_name: game-airflow-scheduler-1
    depends_on:
      postgres:
        condition: service_healthy
      airflow-webserver:
        condition: service_started
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-docker apache-airflow-providers-slack"
    command: scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock   # DockerOperator가 host docker를 쓰기 위함
    restart: unless-stopped

  webapp:
    image: yeeho0o/mlops-test:latest
    container_name: game-webapp-1
    pull_policy: always
    command: bash -lc "uvicorn mlops.src.webapp:app --host 0.0.0.0 --port 8000"
    environment:
      RECO_PATH: /opt/shared/recommendations.json
    volumes:
      - shared-data:/opt/shared                   # DAG 산출물을 읽음
    ports:
      - "8000:8000"
    restart: unless-stopped

volumes:
  airflow-logs:
  postgres-data:
  shared-data:
