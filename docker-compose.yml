# docker-compose.yml
# Airflow(LocalExecutor + Postgres) + Webapp + named volume(shared-data) 통일

x-airflow-common: &airflow-common
  image: apache/airflow:2.9.3-python3.11
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "True"
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    # ⬇️ Slack provider 추가 (한 줄)
    _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-docker apache-airflow-providers-slack"
  volumes:
    - ./dags:/opt/airflow/dags
    - airflow-logs:/opt/airflow/logs
    - /var/run/docker.sock:/var/run/docker.sock
    - shared-data:/opt/shared
  user: "${AIRFLOW_UID:-50000}:0"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - airflow-db:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -lc "airflow db migrate && airflow users create --username admin --password admin --firstname a --lastname d --role Admin --email a@d.com || true"
    depends_on:
      postgres:
        condition: service_healthy

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports: ["8080:8080"]
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy

  webapp:
    image: yeeho0o/mlops-test:latest
    pull_policy: always
    command: bash -lc "uvicorn mlops.src.webapp:app --host 0.0.0.0 --port 8000"
    environment:
      RECO_PATH: /opt/shared/recommendations.json
    volumes:
      - shared-data:/opt/shared
    ports: ["8000:8000"]

volumes:
  airflow-logs:
  airflow-db:
  shared-data:
